;; Object site-lisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "site-lisp/"
  :tables (list 
   (semanticdb-table "font-menus.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("font-lock" include nil nil [1746 1766]) ("easymenu" include nil nil [1724 1743]) ("easy-menu-add-item" code nil nil [1864 2429]) ("font-lock-fontify-level" variable nil nil [2431 2467]) ("font-lock-fontify-level" function (:arguments ("level")) nil [2500 2749]) ("font-lock-fontify-less" function (:user-visible-flag t) nil [2751 3076]) ("font-lock-fontify-more" function (:user-visible-flag t) nil [3078 3403]) ("font-lock-set-menu" function nil nil [3459 4440]) ("font-lock-unset-menu" function nil nil [4498 4615]) ("font-lock-set-defaults" function (:arguments ("after" "font-lock-set-defaults-advice" "activate")) nil [4635 4780]) ("font-lock-unset-defaults" function (:arguments ("after" "font-lock-unset-defaults-advice" "activate")) nil [4782 4933]) ("display-fonts" function (:user-visible-flag t) nil [5134 5455]) ("define-key-after" code nil nil [5457 5544]) ("font-menus" package nil nil [5546 5567]))
    :file "font-menus.el"
    :pointmax 5597
    )
   (semanticdb-table "clearcase.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("clearcase-version-stamp" variable (:constant-flag t :default-value "ClearCase-version: </main/laptop/156>") nil [4464 4538]) ("clearcase-version" variable (:constant-flag t :default-value (substring clearcase-version-stamp 19)) nil [4539 4606]) ("clearcase-maintainer-address" function nil nil [4608 4737]) ("clearcase-submit-bug-report" function (:user-visible-flag t) nil [4739 5580]) ("clearcase-when-debugging" function (:arguments ("&rest" "forms")) nil [5603 5702]) ("clearcase-with-tempfile" function (:arguments ("filename-var" "&rest" "forms")) nil [5704 5972]) ("clearcase-xemacs-p" variable (:default-value (string-match "XEmacs" emacs-version)) nil [6000 6065]) ("clearcase-on-mswindows" variable (:default-value (memq system-type (quote (windows-nt ms-windows cygwin cygwin32)))) nil [6067 6195]) ("clearcase-on-cygwin" variable (:default-value (memq system-type (quote (cygwin cygwin32)))) nil [6197 6263]) ("clearcase-sink-file-name" variable (:default-value (cond (clearcase-on-cygwin "/dev/null") (clearcase-on-mswindows "NUL") (t "/dev/null"))) nil [6265 6397]) ("clearcase-view-mode-quit" function (:arguments ("buf")) nil [6399 6874]) ("clearcase-view-mode" function (:arguments ("arg" "&optional" "camefrom")) nil [6876 7667]) ("clearcase-port-view-buffer-other-window" function (:arguments ("buffer")) nil [7669 7851]) ("clearcase-dired-sort-by-date" function nil nil [7853 7956]) ("if" code nil nil [7985 8482]) ("cl" include nil nil [8613 8626]) ("comint" include nil nil [8627 8644]) ("dired" include nil nil [8645 8661]) ("easymenu" include nil nil [8662 8681]) ("executable" include nil nil [8682 8703]) ("reporter" include nil nil [8704 8723]) ("ring" include nil nil [8724 8739]) ("or" code nil nil [8740 8784]) ("if" code nil nil [8819 8870]) ("clearcase-debug" variable nil nil [8963 8991]) ("clearcase-trace" function (:arguments ("string")) nil [8993 9257]) ("clearcase-enable-tracing" function nil nil [9259 9379]) ("clearcase-disable-tracing" function nil nil [9381 9462]) ("clearcase-dump" function nil nil [9464 9715]) ("clearcase-flush-caches" function nil nil [9717 9848]) ("condition-case" code nil nil [9907 9967]) ("if" code nil nil [9970 10473]) ("defgroup" code nil nil [10476 10553]) ("clearcase-keep-uncheckouts" variable (:default-value t) nil [10555 10760]) ("clearcase-keep-unhijacks" variable (:default-value t) nil [10762 10963]) ("clearcase-set-to-new-activity" variable (:user-visible-flag t :default-value t) nil [11020 11297]) ("clearcase-prompt-for-activity-names" variable (:user-visible-flag t :default-value t) nil [11299 11657]) ("clearcase-make-backup-files" variable (:user-visible-flag t) nil [11659 11884]) ("clearcase-complete-viewtags" variable (:user-visible-flag t :default-value t) nil [11886 12076]) ("clearcase-minimise-menus" variable (:user-visible-flag t) nil [12078 12231]) ("clearcase-auto-dired-mode" variable (:user-visible-flag t :default-value t) nil [12233 12413]) ("clearcase-dired-highlight" variable (:default-value t) nil [12415 12560]) ("clearcase-dired-show-view" variable (:default-value t) nil [12562 12690]) ("clearcase-verify-pre-mkelem-dir-checkout" variable (:user-visible-flag t) nil [12692 12895]) ("clearcase-diff-on-checkin" variable nil nil [12897 13044]) ("clearcase-suppress-confirm" variable nil nil [13072 13229]) ("clearcase-initial-mkelem-comment" variable nil nil [13231 13375]) ("clearcase-command-messages" variable nil nil [13377 13505]) ("clearcase-checkin-arguments" variable (:default-value (if (and (boundp (quote clearcase-checkin-switches)) (not (null clearcase-checkin-switches))) (list clearcase-checkin-switches) nil)) nil [13507 13890]) ("clearcase-checkin-on-mkelem" variable nil nil [13892 14040]) ("clearcase-suppress-checkout-comments" variable nil nil [14042 14224]) ("clearcase-checkout-arguments" variable (:default-value (if (and (boundp (quote clearcase-checkout-arguments)) (not (null clearcase-checkout-arguments))) (list clearcase-checkout-arguments) nil)) nil [14226 14617]) ("clearcase-directory-exclusion-list" variable (:default-value (quote ("lost+found"))) nil [14619 14823]) ("clearcase-use-normal-diff" variable nil nil [14825 14957]) ("clearcase-normal-diff-program" variable (:user-visible-flag t :default-value "diff") nil [14959 15151]) ("clearcase-normal-diff-arguments" variable (:default-value (if (and (boundp (quote clearcase-normal-diff-switches)) (not (null clearcase-normal-diff-switches))) (list clearcase-normal-diff-switches) (list "-u"))) nil [15153 15659]) ("clearcase-vxpath-glue" variable (:default-value "@@") nil [15661 15796]) ("clearcase-viewroot" variable (:default-value (if clearcase-on-mswindows "//view" "/view")) nil [15798 16011]) ("clearcase-viewroot-drive" variable (:default-value "m:") nil [16013 16143]) ("clearcase-suppress-vc-within-mvfs" variable (:default-value t) nil [16145 16273]) ("clearcase-hide-rebase-activities" variable (:default-value t) nil [16275 16415]) ("clearcase-rebase-id-regexp" variable (:default-value "^rebase\\.") nil [16417 16552]) ("clearcase-pname-sep-regexp" variable (:default-value (format "[%s/]" (char-to-string directory-sep-char))) nil [16662 16762]) ("clearcase-non-pname-sep-regexp" variable (:default-value (format "[^%s/]" (char-to-string directory-sep-char))) nil [16764 16869]) ("clearcase-viewtag-regexp" variable (:default-value (concat "^" clearcase-viewroot clearcase-pname-sep-regexp "\\(" clearcase-non-pname-sep-regexp "*" "\\)" "$")) nil [16925 17141]) ("clearcase-vrpath-regexp" variable (:default-value (concat "^" clearcase-viewroot clearcase-pname-sep-regexp "\\(" clearcase-non-pname-sep-regexp "*" "\\)")) nil [17184 17385]) ("clearcase-mode" variable nil nil [17454 17481]) ("set-default" code nil nil [17482 17515]) ("make-variable-buffer-local" code nil nil [17516 17560]) ("put" code nil nil [17561 17601]) ("if" code nil nil [17654 17823]) ("clearcase-mode-map" variable (:default-value (make-sparse-keymap)) nil [17921 17969]) ("clearcase-prefix-map" variable (:default-value (make-sparse-keymap)) nil [17970 18020]) ("define-key" code nil nil [18021 18081]) ("define-key" code nil nil [18082 18152]) ("define-key" code nil nil [18154 18230]) ("define-key" code nil nil [18231 18305]) ("define-key" code nil nil [18306 18364]) ("define-key" code nil nil [18365 18437]) ("define-key" code nil nil [18438 18508]) ("define-key" code nil nil [18509 18585]) ("define-key" code nil nil [18586 18643]) ("define-key" code nil nil [18644 18718]) ("define-key" code nil nil [18719 18794]) ("define-key" code nil nil [18795 18868]) ("define-key" code nil nil [18869 18942]) ("define-key" code nil nil [18943 19015]) ("define-key" code nil nil [19016 19085]) ("define-key" code nil nil [19248 19296]) ("define-key" code nil nil [19321 19369]) ("define-key" code nil nil [19386 19434]) ("define-key" code nil nil [19456 19504]) ("define-key" code nil nil [19517 19565]) ("define-key" code nil nil [19590 19638]) ("define-key" code nil nil [19661 19709]) ("or" code nil nil [19784 20017]) ("clearcase-mode" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [20019 20896]) ("if" code nil nil [21052 21244]) ("clearcase-dired-insert-viewtag" function nil nil [21246 21739]) ("clearcase-dired-reformat-buffer" function nil nil [21741 26834]) ("clearcase-path-follow-if-vob-slink" function (:arguments ("path")) nil [26837 27212]) ("clearcase-dired-list-modified-files" function (:arguments ("directory")) nil [36582 39288]) ("clearcase-dired-mode" variable nil nil [39341 39374]) ("set-default" code nil nil [39375 39414]) ("make-variable-buffer-local" code nil nil [39415 39465]) ("if" code nil nil [39518 39705]) ("clearcase-dired-mode-map" variable (:default-value (make-sparse-keymap)) nil [39809 39863]) ("clearcase-dired-prefix-map" variable (:default-value (make-sparse-keymap)) nil [39864 39920]) ("define-key" code nil nil [39921 39993]) ("define-key" code nil nil [39995 40073]) ("define-key" code nil nil [40074 40151]) ("define-key" code nil nil [40152 40216]) ("define-key" code nil nil [40217 40290]) ("define-key" code nil nil [40291 40365]) ("define-key" code nil nil [40366 40444]) ("define-key" code nil nil [40445 40508]) ("define-key" code nil nil [40509 40586]) ("define-key" code nil nil [40587 40665]) ("define-key" code nil nil [40666 40741]) ("define-key" code nil nil [40742 40817]) ("define-key" code nil nil [40818 40893]) ("define-key" code nil nil [40894 40968]) ("define-key" code nil nil [41131 41185]) ("define-key" code nil nil [41210 41264]) ("define-key" code nil nil [41281 41335]) ("define-key" code nil nil [41357 41411]) ("define-key" code nil nil [41424 41478]) ("define-key" code nil nil [41503 41557]) ("define-key" code nil nil [41580 41634]) ("or" code nil nil [41709 41960]) ("clearcase-dired-mode" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [41962 43388]) ("clearcase-comment-mode" function (:user-visible-flag t) nil [43469 46267]) ("clearcase-comment-mode-map" variable nil nil [46287 46326]) ("if" code nil nil [46327 46981]) ("clearcase-comment-maximum-ring-size" variable (:constant-flag t :default-value 32) nil [47000 47107]) ("clearcase-comment-entry-mode" variable nil nil [47126 47167]) ("clearcase-comment-operation" variable nil nil [47168 47208]) ("clearcase-comment-operands" variable nil nil [47209 47244]) ("clearcase-comment-ring" variable nil nil [47245 47280]) ("clearcase-comment-ring-index" variable nil nil [47281 47322]) ("clearcase-comment-last-match" variable nil nil [47323 47364]) ("clearcase-comment-window-config" variable nil nil [47365 47409]) ("clearcase-parent-buffer" variable nil nil [47560 47596]) ("clearcase-parent-buffer-name" variable nil nil [47597 47638]) ("clearcase-comment-start-entry" function (:arguments ("uniquifier" "prompt" "continuation" "operands" "&optional" "parent-buffer" "comment-seed")) nil [47670 49157]) ("clearcase-comment-cleanup" function nil nil [49160 49577]) ("clearcase-comment-finish" function (:user-visible-flag t) nil [49579 50636]) ("clearcase-comment-save-comment-for-buffer" function (:arguments ("comment" "buffer")) nil [50638 51215]) ("clearcase-comment-save" function (:user-visible-flag t) nil [51217 51677]) ("clearcase-comment-num-num-error" function nil nil [51679 51795]) ("clearcase-comment-next" function (:user-visible-flag t :arguments ("arg")) nil [51830 51970]) ("clearcase-comment-previous" function (:user-visible-flag t :arguments ("arg")) nil [51972 52874]) ("clearcase-comment-search-forward" function (:user-visible-flag t :arguments ("str")) nil [52876 53543]) ("clearcase-comment-search-reverse" function (:user-visible-flag t :arguments ("str")) nil [53545 54292]) ("clearcase-edcs-mode" function nil nil [54384 54765]) ("clearcase-edcs-mode-map" variable nil nil [54785 54821]) ("if" code nil nil [54822 55056]) ("clearcase-edcs-tag-name" variable nil nil [55075 55164]) ("clearcase-edcs-tag-history" variable nil nil [55166 55257]) ("clearcase-edcs-edit" function (:user-visible-flag t :arguments ("tag-name")) nil [55275 56481]) ("clearcase-edcs-save" function nil nil [56483 57413]) ("clearcase-edcs-finish" function nil nil [57415 57580]) ("clearcase-hijack-current-buffer" function (:user-visible-flag t) nil [58046 58185]) ("clearcase-hijack-dired-files" function (:user-visible-flag t) nil [58187 58323]) ("clearcase-unhijack-current-buffer" function (:user-visible-flag t) nil [58325 58470]) ("clearcase-unhijack-dired-files" function (:user-visible-flag t) nil [58472 58612]) ("clearcase-annotate-file" function (:arguments ("file")) nil [58637 59361]) ("clearcase-annotate-current-buffer" function nil nil [59363 59468]) ("clearcase-annotate-dired-file" function (:user-visible-flag t) nil [59470 59607]) ("clearcase-find-checkouts-in-current-view" function (:user-visible-flag t) nil [59757 60626]) ("clearcase-read-new-activity-name" function nil nil [60678 61045]) ("clearcase-read-mkact-args" function nil nil [61047 61407]) ("clearcase-make-internally-named-activity" function (:arguments ("stream-name" "comment-file")) nil [61409 62428]) ("clearcase-ucm-mkact-current-dir" function (:user-visible-flag t :arguments ("name" "headline" "&optional" "comment")) nil [62430 65452]) ("clearcase-ucm-filter-out-rebases" function (:arguments ("activities")) nil [65481 65784]) ("clearcase-ucm-set-activity-current-dir" function nil nil [65786 67091]) ("clearcase-ucm-activity-selection-interpreter" function nil nil [67093 67426]) ("clearcase-ucm-set-activity-none-current-dir" function nil nil [67428 67705]) ("clearcase-ucm-set-activity" function (:arguments ("viewtag" "activity-name")) nil [67707 68918]) ("clearcase-ucm-describe-current-activity" function nil nil [68956 69986]) ("clearcase-next-action-current-buffer" function (:user-visible-flag t) nil [70020 70238]) ("clearcase-next-action-dired-files" function (:user-visible-flag t) nil [70240 70538]) ("clearcase-next-action" function (:arguments ("file")) nil [70540 71219]) ("clearcase-next-action-seq" function (:arguments ("files")) nil [71221 72218]) ("clearcase-compute-next-action" function (:arguments ("file")) nil [72220 73645]) ("clearcase-mkelem-current-buffer" function (:user-visible-flag t) nil [73668 74115]) ("clearcase-mkelem-dired-files" function (:user-visible-flag t) nil [74117 74285]) ("clearcase-checkin-current-buffer" function (:user-visible-flag t) nil [74309 74750]) ("clearcase-checkin-dired-files" function (:user-visible-flag t) nil [74752 74901]) ("clearcase-dired-checkin-current-dir" function nil nil [74903 75023]) ("clearcase-edit-checkout-comment-current-buffer" function (:user-visible-flag t) nil [75061 75266]) ("clearcase-edit-checkout-comment-dired-file" function (:user-visible-flag t) nil [75268 75425]) ("clearcase-edit-checkout-comment" function (:arguments ("file" "&optional" "comment")) nil [75427 76050]) ("clearcase-checkout-current-buffer" function (:user-visible-flag t) nil [76075 76230]) ("clearcase-checkout-dired-files" function (:user-visible-flag t) nil [76232 76384]) ("clearcase-dired-checkout-current-dir" function nil nil [76386 76508]) ("clearcase-uncheckout-current-buffer" function (:user-visible-flag t) nil [76535 76686]) ("clearcase-uncheckout-dired-files" function (:user-visible-flag t) nil [76688 76836]) ("clearcase-dired-uncheckout-current-dir" function nil nil [76838 76954]) ("clearcase-mkbrtype" function (:arguments ("typename")) nil [76979 77096]) ("clearcase-describe-current-buffer" function (:user-visible-flag t) nil [77121 77289]) ("clearcase-describe-dired-file" function (:user-visible-flag t) nil [77291 77424]) ("clearcase-what-rule-current-buffer" function nil nil [77450 77552]) ("clearcase-what-rule-dired-file" function nil nil [77554 77656]) ("clearcase-list-history-current-buffer" function (:user-visible-flag t) nil [77685 77856]) ("clearcase-list-history-dired-file" function (:user-visible-flag t) nil [77858 78015]) ("clearcase-ediff-pred-current-buffer" function (:user-visible-flag t) nil [78037 78328]) ("clearcase-ediff-pred-dired-file" function (:user-visible-flag t) nil [78330 78663]) ("clearcase-ediff-branch-base-current-buffer" function (:user-visible-flag t) nil [78665 78973]) ("clearcase-ediff-branch-base-dired-file" function (:user-visible-flag t) nil [78975 79325]) ("clearcase-ediff-named-version-current-buffer" function (:arguments ("version")) nil [79327 79687]) ("clearcase-ediff-named-version-dired-file" function (:arguments ("version")) nil [79689 80119]) ("clearcase-ediff-file-with-version" function (:arguments ("truename" "other-version")) nil [80121 80571]) ("clearcase-gui-diff-pred-current-buffer" function (:user-visible-flag t) nil [80596 80894]) ("clearcase-gui-diff-pred-dired-file" function (:user-visible-flag t) nil [80896 81236]) ("clearcase-gui-diff-branch-base-current-buffer" function (:user-visible-flag t) nil [81238 81553]) ("clearcase-gui-diff-branch-base-dired-file" function (:user-visible-flag t) nil [81555 81912]) ("clearcase-gui-diff-named-version-current-buffer" function (:arguments ("version")) nil [81914 82280]) ("clearcase-gui-diff-named-version-dired-file" function (:arguments ("version")) nil [82282 82721]) ("clearcase-gui-diff-file-with-version" function (:arguments ("truename" "other-version")) nil [82723 83445]) ("clearcase-diff-pred-current-buffer" function (:user-visible-flag t) nil [83466 83753]) ("clearcase-diff-pred-dired-file" function (:user-visible-flag t) nil [83755 84084]) ("clearcase-diff-branch-base-current-buffer" function (:user-visible-flag t) nil [84086 84390]) ("clearcase-diff-branch-base-dired-file" function (:user-visible-flag t) nil [84392 84738]) ("clearcase-diff-named-version-current-buffer" function (:arguments ("version")) nil [84740 85098]) ("clearcase-diff-named-version-dired-file" function (:arguments ("version")) nil [85100 85525]) ("clearcase-diff-file-with-version" function (:arguments ("truename" "other-version")) nil [85527 85979]) ("clearcase-version-other-window" function (:arguments ("version")) nil [86008 86419]) ("clearcase-browse-vtree-current-buffer" function nil nil [86421 86529]) ("clearcase-browse-vtree-dired-file" function nil nil [86531 86639]) ("clearcase-gui-vtree-browser-current-buffer" function nil nil [86665 86783]) ("clearcase-gui-vtree-browser-dired-file" function nil nil [86785 86903]) ("clearcase-gui-vtree-browser" function (:arguments ("file")) nil [86905 87253]) ("clearcase-gui-clearexplorer" function nil nil [87280 87499]) ("clearcase-gui-rebase" function nil nil [87501 87816]) ("clearcase-gui-deliver" function nil nil [87818 88137]) ("clearcase-gui-merge-manager" function nil nil [88139 88321]) ("clearcase-gui-project-explorer" function nil nil [88323 88512]) ("clearcase-gui-snapshot-view-updater" function nil nil [88514 88707]) ("clearcase-update-view" function nil nil [88950 89063]) ("clearcase-update-default-directory" function nil nil [89065 89229]) ("clearcase-update-current-buffer" function nil nil [89231 89391]) ("clearcase-update-dired-files" function nil nil [89393 89586]) ("clearcase-post-update-timer" variable nil nil [89728 89768]) ("clearcase-post-update-work-queue" variable nil nil [89769 89814]) ("clearcase-post-update-schedule-work" function (:arguments ("buffer")) nil [89816 90807]) ("clearcase-post-update-timer-function" function nil nil [90810 91691]) ("clearcase-post-update-check-process-buffer" function (:arguments ("buffer")) nil [91693 92991]) ("clearcase-sync-after-scopes-updated" function (:arguments ("scopes")) nil [92993 94301]) ("clearcase-update-buffer-viewtag" variable nil nil [94365 94409]) ("clearcase-update" function (:arguments ("viewtag" "&rest" "files")) nil [94411 96414]) ("clearcase-file-ok-to-hijack" function (:arguments ("file")) nil [96437 96927]) ("clearcase-hijack-seq" function (:arguments ("files")) nil [96929 97250]) ("clearcase-hijack" function (:arguments ("file")) nil [97252 98051]) ("clearcase-file-ok-to-unhijack" function (:arguments ("file")) nil [98076 98197]) ("clearcase-unhijack" function (:arguments ("file")) nil [98199 98271]) ("cleartool-unhijack-parse-for-kept-files" function (:arguments ("ret" "snapshot-view-root")) nil [98273 99620]) ("clearcase-utl-files-in-same-view-p" function (:arguments ("files")) nil [99622 99995]) ("clearcase-unhijack-seq" function (:arguments ("files")) nil [99997 102157]) ("clearcase-file-ok-to-mkelem" function (:arguments ("file")) nil [102180 102559]) ("clearcase-assert-file-ok-to-mkelem" function (:arguments ("file")) nil [102561 102772]) ("clearcase-commented-mkelem" function (:arguments ("file" "&optional" "okay-to-checkout-dir-first" "comment")) nil [102774 105721]) ("clearcase-commented-mkelem-seq" function (:arguments ("files" "&optional" "comment")) nil [105723 106453]) ("clearcase-file-ok-to-checkin" function (:arguments ("file")) nil [106477 106651]) ("clearcase-assert-file-ok-to-checkin" function (:arguments ("file")) nil [106653 106855]) ("clearcase-commented-checkin" function (:arguments ("file" "&optional" "comment")) nil [106857 108977]) ("clearcase-commented-checkin-seq" function (:arguments ("files" "&optional" "comment")) nil [108979 109762]) ("clearcase-file-ok-to-checkout" function (:arguments ("file")) nil [109787 110094]) ("clearcase-assert-file-ok-to-checkout" function (:arguments ("file")) nil [110096 110302]) ("clearcase-commented-checkout" function (:arguments ("file" "&optional" "comment")) nil [110344 111604]) ("clearcase-commented-checkout-seq" function (:arguments ("files" "&optional" "comment")) nil [111607 112394]) ("clearcase-file-ok-to-uncheckout" function (:arguments ("file")) nil [112421 112590]) ("clearcase-assert-file-ok-to-uncheckout" function (:arguments ("file")) nil [112592 112806]) ("cleartool-unco-parse-for-kept-file" function (:arguments ("ret")) nil [112808 113052]) ("clearcase-uncheckout" function (:arguments ("file")) nil [113054 114644]) ("clearcase-uncheckout-seq" function (:arguments ("files")) nil [114646 114852]) ("clearcase-describe" function (:arguments ("file")) nil [114877 115128]) ("clearcase-describe-seq" function (:arguments ("files")) nil [115130 115259]) ("clearcase-commented-mkbrtype" function (:arguments ("typename" "&optional" "comment")) nil [115284 116152]) ("clearcase-file-ok-to-browse" function (:arguments ("file")) nil [116200 116422]) ("clearcase-browse-vtree" function (:arguments ("file")) nil [116424 118285]) ("clearcase-list-history" function (:arguments ("file")) nil [118314 119668]) ("clearcase-files-are-identical" function (:arguments ("f1" "f2")) nil [119693 120032]) ("clearcase-diff-files" function (:arguments ("file1" "file2")) nil [120034 120882]) ("clearcase-what-rule" function (:arguments ("file")) nil [120908 121343]) ("clearcase-fprop-unparse-properties" function (:arguments ("properties")) nil [122548 123534]) ("clearcase-fprop-display-properties" function (:user-visible-flag t :arguments ("file")) nil [123536 124106]) ("clearcase-fprop-dump-to-current-buffer" function (:user-visible-flag t) nil [124108 124658]) ("clearcase-fprop-dump" function nil nil [124660 124856]) ("clearcase-fprop-hashtable" variable (:default-value (make-vector 31 0)) nil [124865 124965]) ("clearcase-fprop-canonicalise-path" function (:arguments ("filename")) nil [124967 125603]) ("clearcase-fprop-clear-all-properties" function nil nil [125605 125763]) ("clearcase-fprop-store-properties" function (:arguments ("file" "properties")) nil [125765 126051]) ("clearcase-fprop-unstore-properties" function (:arguments ("file")) nil [126053 126286]) ("clearcase-fprop-lookup-properties" function (:arguments ("file")) nil [126288 126595]) ("clearcase-fprop-get-properties" function (:arguments ("file")) nil [126597 127256]) ("clearcase-fprop-truename" function (:arguments ("file")) nil [127258 127404]) ("clearcase-fprop-mtype" function (:arguments ("file")) nil [127406 127546]) ("clearcase-fprop-checked-out" function (:arguments ("file")) nil [127548 127700]) ("clearcase-fprop-reserved" function (:arguments ("file")) nil [127702 127848]) ("clearcase-fprop-version" function (:arguments ("file")) nil [127850 127994]) ("clearcase-fprop-predecessor-version" function (:arguments ("file")) nil [127996 128164]) ("clearcase-fprop-oid" function (:arguments ("file")) nil [128166 128302]) ("clearcase-fprop-user" function (:arguments ("file")) nil [128304 128442]) ("clearcase-fprop-date" function (:arguments ("file")) nil [128444 128582]) ("clearcase-fprop-time-last-described" function (:arguments ("file")) nil [128584 128752]) ("clearcase-fprop-viewtag" function (:arguments ("file")) nil [128754 128899]) ("clearcase-fprop-comment" function (:arguments ("file")) nil [128901 129046]) ("clearcase-fprop-vob-slink-text" function (:arguments ("file")) nil [129048 129203]) ("clearcase-fprop-hijacked" function (:arguments ("file")) nil [129205 129352]) ("clearcase-fprop-set-comment" function (:arguments ("file" "comment")) nil [129354 129527]) ("clearcase-fprop-owner-of-checkout" function (:arguments ("file")) nil [129529 129727]) ("clearcase-fprop-file-is-vob-slink-p" function (:arguments ("object-name")) nil [129729 129856]) ("clearcase-fprop-file-is-version-p" function (:arguments ("object-name")) nil [129858 130065]) ("clearcase-fprop-fmt-string" variable (:default-value (if clearcase-on-mswindows (if clearcase-xemacs-p (if clearcase-on-cygwin "[nil \\\"%m\\\" \\\"%f\\\" \\\"%Rf\\\" \\\"%Sn\\\" \\\"%PSn\\\" \\\"%On\\\" \\\"%u\\\" \\\"%Nd\\\" nil nil nil \\\"%[slink_text]p\\\"  nil ]\\n%c" "[nil \\\"%m\\\" \\\"%f\\\" \\\"%Rf\\\" \\\"%Sn\\\" \\\"%PSn\\\" \\\"%On\\\" \\\"%u\\\" \\\"%Nd\\\" nil nil nil \\\"%[slink_text]p\\\" nil]
%c") "[nil \"%m\" \"%f\" \"%Rf\" \"%Sn\" \"%PSn\" \"%On\" \"%u\" \"%Nd\" nil nil nil \"%[slink_text]p\" nil]\\n%c") "'[nil \"%m\" \"%f\" \"%Rf\" \"%Sn\" \"%PSn\" \"%On\" \"%u\" \"%Nd\" nil nil nil \"%[slink_text]p\" nil]\\n%c'")) nil [130330 131494]) ("clearcase-fprop-describe-count" variable nil nil [131496 131609]) ("clearcase-fprop-read-properties" function (:arguments ("file")) nil [131611 136610]) ("clearcase-vprop-dump-to-current-buffer" function nil nil [136990 137524]) ("clearcase-vprop-dump" function nil nil [137526 137722]) ("clearcase-vprop-unparse-properties" function (:arguments ("properties")) nil [137724 138144]) ("clearcase-vprop-timer" variable nil nil [138201 138235]) ("clearcase-vprop-work-queue" variable nil nil [138236 138275]) ("clearcase-vprop-schedule-work" function (:arguments ("viewtag")) nil [138277 139035]) ("clearcase-vprop-timer-function" function nil nil [139037 139409]) ("clearcase-vprop-hashtable" variable (:default-value (make-vector 31 0)) nil [139418 139518]) ("clearcase-vprop-clear-all-properties" function nil nil [139520 139678]) ("clearcase-vprop-store-properties" function (:arguments ("viewtag" "properties")) nil [139680 139882]) ("clearcase-vprop-unstore-properties" function (:arguments ("viewtag")) nil [139884 140051]) ("clearcase-vprop-lookup-properties" function (:arguments ("viewtag")) nil [140053 140265]) ("clearcase-vprop-get-properties" function (:arguments ("viewtag")) nil [140267 140612]) ("clearcase-vprop-ucm" function (:arguments ("viewtag")) nil [140614 140759]) ("clearcase-vprop-stream" function (:arguments ("viewtag")) nil [140761 140912]) ("clearcase-vprop-pvob" function (:arguments ("viewtag")) nil [140914 141063]) ("clearcase-vprop-activities" function (:arguments ("viewtag")) nil [141065 143527]) ("clearcase-vprop-current-activity" function (:arguments ("viewtag")) nil [143529 143700]) ("clearcase-vprop-set-activities" function (:arguments ("viewtag" "activities")) nil [143702 144036]) ("clearcase-vprop-flush-activities" function (:arguments ("viewtag")) nil [144038 144230]) ("clearcase-vprop-set-current-activity" function (:arguments ("viewtag" "activity")) nil [144232 144434]) ("clearcase-vprop-describe-count" variable nil nil [144526 144639]) ("clearcase-lsstream-fmt-string" variable (:default-value (if clearcase-on-mswindows (if clearcase-xemacs-p (if clearcase-on-cygwin "[\\\"%n\\\"  \\\"%[master]p\\\" ]" "[\\\"%n\\\"  \\\"%[master]p\\\" ]") "[\"%n\"  \"%[master]p\" ]") "'[\"%n\"  \"%[master]p\" ]'")) nil [144641 145082]) ("clearcase-vprop-read-properties" function (:arguments ("viewtag")) nil [145084 148280]) ("clearcase-vprop-async-viewtag" variable nil nil [148282 148324]) ("clearcase-vprop-async-proc" variable nil nil [148325 148364]) ("clearcase-vprop-read-activities-asynchronously" function (:arguments ("viewtag")) nil [148365 150505]) ("clearcase-vprop-read-activities-sentinel" function (:arguments ("process" "event-string")) nil [150507 150844]) ("clearcase-vprop-finish-reading-activities" function (:arguments ("buffer")) nil [150846 152684]) ("clearcase-file-appears-modified-since-checkout-p" function (:arguments ("file")) nil [155425 157844]) ("clearcase-always-mvfs-regexp" variable (:default-value (if (not clearcase-on-mswindows) "^/vobs/[^/]+/" (concat "^" "[Mm]:" clearcase-pname-sep-regexp))) nil [158190 158623]) ("clearcase-never-mvfs-regexps" variable (:default-value (if clearcase-on-mswindows nil (quote ("^/net/[^/]+/" "^/tmp_mnt/net/[^/]+/")))) nil [158802 159191]) ("clearcase-known-vob-root-cache" variable nil nil [159193 159236]) ("clearcase-file-would-be-in-mvfs-p" function (:arguments ("filename")) nil [159238 159639]) ("clearcase-file-is-in-mvfs-p" function (:arguments ("filename")) nil [159641 160296]) ("clearcase-wd-is-in-mvfs" function nil nil [160298 160456]) ("clearcase-file-matches-vob-root" function (:arguments ("truename" "vob-root-list")) nil [160458 160799]) ("clearcase-file-vob-root" function (:arguments ("truename")) nil [160801 161744]) ("clearcase-file-covers-element-p" function (:arguments ("path")) nil [161904 162259]) ("clearcase-known-snapshot-root-cache" variable nil nil [162446 162494]) ("clearcase-file-would-be-in-snapshot-p" function (:arguments ("filename")) nil [162496 162933]) ("clearcase-file-is-in-snapshot-p" function (:arguments ("truename")) nil [162935 163353]) ("clearcase-wd-is-in-snapshot" function nil nil [163355 163518]) ("clearcase-file-matches-snapshot-root" function (:arguments ("truename" "snapshot-root-list")) nil [163520 163896]) ("clearcase-never-snapshot-regexps" variable (:default-value (if clearcase-on-mswindows nil (quote ("^/net/[^/]+/" "^/tmp_mnt/net/[^/]+/")))) nil [164080 164500]) ("clearcase-file-snapshot-root" function (:arguments ("truename")) nil [164502 165909]) ("clearcase-viewdat-to-uuid" function (:arguments ("file")) nil [165911 166074]) ("clearcase-view-uuid-to-tag" function (:arguments ("uuid")) nil [166076 166254]) ("clearcase-file-would-be-in-view-p" function (:arguments ("filename")) nil [166816 167519]) ("clearcase-file-is-in-view-p" function (:arguments ("filename")) nil [167521 168258]) ("clearcase-file-viewtag" function (:arguments ("filename")) nil [168260 169588]) ("clearcase-file-wdview" function (:arguments ("truename")) nil [169590 170078]) ("clearcase-ct-eotxn-cmd" variable (:constant-flag t :default-value "pwd -h
") nil [171577 171621]) ("clearcase-ct-eotxn-response" variable (:constant-flag t :default-value "Usage: pwd
") nil [171622 171675]) ("clearcase-ct-eotxn-response-length" variable (:constant-flag t :default-value (length clearcase-ct-eotxn-response)) nil [171676 171758]) ("clearcase-ct-subproc-timeout" variable (:constant-flag t :default-value 30) nil [171760 171837]) ("clearcase-ct-tq" variable nil nil [171839 171926]) ("clearcase-ct-return" variable nil nil [171928 172016]) ("clearcase-ct-view" variable nil nil [172018 172117]) ("clearcase-ct-wdir" variable nil nil [172119 172231]) ("clearcase-ct-running" variable nil nil [172233 172266]) ("clearcase-ct-accept-process-output" function (:arguments ("proc" "timeout")) nil [172268 172364]) ("clearcase-ct-start-cleartool" function nil nil [172366 173988]) ("clearcase-ct-sentinel" function (:arguments ("process" "event-string")) nil [174018 174359]) ("clearcase-ct-kill-cleartool" function (:user-visible-flag t) nil [174361 174575]) ("clearcase-ct-callback" function (:arguments ("arg" "val")) nil [174577 175016]) ("clearcase-ct-do-cleartool-command" function (:arguments ("command" "file" "comment" "&optional" "extra-args")) nil [175018 177833]) ("clearcase-ct-cd" function (:arguments ("dir")) nil [177835 178051]) ("clearcase-ct-cleartool-cmd" function (:arguments ("&rest" "cmd")) nil [178053 178141]) ("clearcase-ct-get-command-stdout" function (:arguments ("program" "&rest" "args")) nil [178188 178560]) ("clearcase-disable-tq" variable (:default-value clearcase-on-mswindows) nil [178613 178744]) ("clearcase-ct-blocking-call" function (:arguments ("&rest" "cmd")) nil [178746 180588]) ("clearcase-ct-kill-tq" function nil nil [180590 180780]) ("clearcase-ct-kill-buffer-hook" function nil nil [180782 181169]) ("add-hook" code nil nil [181171 181230]) ("clearcase-do-command" function (:arguments ("okstatus" "command" "file" "&optional" "extra-args")) nil [181343 183354]) ("clearcase-viewtag-try-to-start-view" function (:arguments ("viewtag")) nil [183410 183647]) ("clearcase-viewtag-started-viewtags-alist" function nil nil [183649 183890]) ("clearcase-viewtag-started-viewtags" function nil nil [183892 184502]) ("clearcase-viewtag-start-view" function (:arguments ("viewtag")) nil [184634 184977]) ("clearcase-viewtag-cache" variable nil nil [185020 185090]) ("clearcase-viewtag-dir-cache" variable nil nil [185092 185170]) ("clearcase-viewtag-cache-timeout" variable (:user-visible-flag t :default-value 1800) nil [185172 185272]) ("clearcase-viewtag-schedule-cache-invalidation" function nil nil [185274 185609]) ("clearcase-viewtag-read-all-viewtags" function nil nil [185765 186329]) ("clearcase-viewtag-populate-caches" function nil nil [186331 186738]) ("clearcase-viewtag-all-viewtags-obarray" function nil nil [186884 187116]) ("clearcase-viewtag-all-viewtag-dirs-obarray" function nil nil [187298 187555]) ("clearcase-viewtag-exists" function (:arguments ("viewtag")) nil [187557 187679]) ("clearcase-vxpath-p" function (:arguments ("path")) nil [187747 187906]) ("clearcase-vxpath-element-part" function (:arguments ("vxpath")) nil [187908 188117]) ("clearcase-vxpath-version-part" function (:arguments ("vxpath")) nil [188119 188317]) ("clearcase-vxpath-branch" function (:arguments ("vxpath")) nil [188319 188648]) ("clearcase-vxpath-version" function (:arguments ("vxpath")) nil [188650 188911]) ("clearcase-vxpath-cons-vxpath" function (:arguments ("file" "version" "&optional" "viewtag")) nil [188913 189853]) ("clearcase-vxpath-of-predecessor" function (:arguments ("file")) nil [189938 190754]) ("clearcase-vxpath-version-extend" function (:arguments ("file")) nil [190756 191305]) ("clearcase-vxpath-of-branch-base" function (:arguments ("file")) nil [191307 192393]) ("clearcase-vxpath-version-of-branch-base" function (:arguments ("file")) nil [192395 192522]) ("clearcase-vxpath-get-version-in-buffer" function (:arguments ("vxpath")) nil [192524 193050]) ("clearcase-vxpath-get-version-in-temp-file" function (:arguments ("vxpath")) nil [193052 193528]) ("clearcase-vrpath-p" function (:arguments ("path")) nil [193640 193765]) ("clearcase-vrpath-head" function (:arguments ("vrpath")) nil [193767 193973]) ("clearcase-vrpath-tail" function (:arguments ("vrpath")) nil [193975 194177]) ("clearcase-vrpath-viewtag" function (:arguments ("vrpath")) nil [194179 194387]) ("clearcase-multiple-viewroot-regexp" variable (:default-value (concat "^" clearcase-viewroot clearcase-pname-sep-regexp clearcase-non-pname-sep-regexp "+" "\\(" clearcase-viewroot clearcase-pname-sep-regexp "\\)")) nil [194662 194940]) ("clearcase-path-remove-useless-viewtags" function (:arguments ("pathname")) nil [194942 195842]) ("clearcase-path-canonicalise-slashes" function (:arguments ("path")) nil [196065 196201]) ("clearcase-path-canonical" function (:arguments ("path")) nil [196203 196436]) ("clearcase-path-native" function (:arguments ("path")) nil [196438 196663]) ("clearcase-path-file-really-exists-p" function (:arguments ("filename")) nil [196665 197089]) ("clearcase-path-file-in-any-scopes" function (:arguments ("file" "scopes")) nil [197091 197378]) ("clearcase-path-file-in-scope" function (:arguments ("file" "scope")) nil [197381 197774]) ("clearcase-mode-line-buffer-id" function (:arguments ("filename")) nil [197800 198719]) ("clearcase-read-version-name" function (:arguments ("prompt" "file")) nil [198789 200140]) ("clearcase-read-label-name" function (:arguments ("prompt")) nil [200198 200789]) ("clearcase-dir-all-files" function (:arguments ("func" "&rest" "args")) nil [200835 201264]) ("clearcase-file-tree-walk-internal" function (:arguments ("file" "func" "args" "quiet")) nil [201266 201981]) ("clearcase-file-tree-walk" function (:arguments ("func" "&rest" "args")) nil [201985 202279]) ("clearcase-subdir-tree-walk" function (:arguments ("func" "&rest" "args")) nil [202281 202571]) ("clearcase-subdir-tree-walk-internal" function (:arguments ("file" "func" "args" "quiet")) nil [202573 203508]) ("clearcase-position-context" function (:arguments ("posn")) nil [203807 203973]) ("clearcase-find-position-by-context" function (:arguments ("context")) nil [204069 204990]) ("clearcase-sync-after-file-updated-from-vob" function (:arguments ("file")) nil [205038 205727]) ("clearcase-sync-from-disk" function (:arguments ("file" "&optional" "no-confirm")) nil [205729 206716]) ("clearcase-sync-from-disk-if-needed" function (:arguments ("file")) nil [206718 207829]) ("clearcase-sync-to-disk" function (:arguments ("&optional" "not-urgent")) nil [207832 208305]) ("clearcase-buffer-revert" function (:arguments ("&optional" "no-confirm")) nil [208308 210460]) ("clearcase-utl-populate-and-view-buffer" function (:arguments ("buffer" "args" "content-generating-func")) nil [210531 210989]) ("clearcase-utl-edit-and-view-buffer" function (:arguments ("buffer" "args" "content-editing-func")) nil [210991 211798]) ("clearcase-tempfiles" variable nil nil [211830 211862]) ("clearcase-utl-tempfile-name" function (:arguments ("&optional" "vxpath")) nil [211863 212584]) ("clearcase-utl-clean-tempfiles" function nil nil [212586 212898]) ("clearcase-utl-touch-file" function (:arguments ("file")) nil [212907 213291]) ("clearcase-utl-filetimes-close" function (:arguments ("filetime1" "filetime2" "tolerance")) nil [213293 213728]) ("clearcase-utl-emacs-date-to-clearcase-date" function (:arguments ("s")) nil [213730 214012]) ("clearcase-utl-month-unparse" function (:arguments ("s")) nil [214020 214371]) ("clearcase-utl-strip-trailing-slashes" function (:arguments ("name")) nil [214373 214642]) ("clearcase-utl-file-size" function (:arguments ("file")) nil [214644 214715]) ("clearcase-utl-file-atime" function (:arguments ("file")) nil [214716 214788]) ("clearcase-utl-file-mtime" function (:arguments ("file")) nil [214789 214861]) ("clearcase-utl-file-ctime" function (:arguments ("file")) nil [214862 214934]) ("clearcase-utl-kill-view-buffer" function nil nil [214936 215076]) ("clearcase-utl-escape-double-quotes" function (:arguments ("s")) nil [215078 215372]) ("clearcase-utl-escape-backslashes" function (:arguments ("s")) nil [215374 215653]) ("clearcase-utl-quote-if-nec" function (:arguments ("token")) nil [215655 215954]) ("clearcase-utl-or-func" function (:arguments ("&rest" "args")) nil [215956 216245]) ("clearcase-utl-any" function (:arguments ("predicate" "list")) nil [216247 216567]) ("clearcase-utl-every" function (:arguments ("predicate" "list")) nil [216569 216892]) ("clearcase-utl-list-filter" function (:arguments ("predicate" "list")) nil [216894 217296]) ("clearcase-utl-elts-are-eq" function (:arguments ("l")) nil [217298 217623]) ("clearcase-utl-mark-marker" function nil nil [217683 217785]) ("clearcase-utl-syslog" function (:arguments ("buf" "value")) nil [217787 218038]) ("clearcase-utl-1st-line-of-string" function (:arguments ("s")) nil [218082 218332]) ("clearcase-utl-split-string" function (:arguments ("str" "pat" "&optional" "indir" "suffix")) nil [218334 218941]) ("clearcase-utl-split-string-at-char" function (:arguments ("str" "char")) nil [218943 219416]) ("clearcase-utl-add-env" function (:arguments ("env" "var")) nil [219419 219908]) ("clearcase-utl-augment-env-from-view-config-spec" function (:arguments ("old-env" "tag" "&optional" "add-ons")) nil [219911 220630]) ("clearcase-utl-make-writeable" function (:arguments ("file")) nil [220632 220785]) ("clearcase-utl-make-unwriteable" function (:arguments ("file")) nil [220787 220942]) ("clearcase-buffer-contains-version-p" function nil nil [221068 221384]) ("clearcase-menu-contents-minimised" variable (:default-value (list "ClearCase" ["Checkin" clearcase-checkin-current-buffer :keys nil :visible (clearcase-file-ok-to-checkin buffer-file-name)] ["Edit checkout comment" clearcase-edit-checkout-comment-current-buffer :keys nil :visible (clearcase-file-ok-to-checkin buffer-file-name)] ["Checkout" clearcase-checkout-current-buffer :keys nil :visible (clearcase-file-ok-to-checkout buffer-file-name)] ["Hijack" clearcase-hijack-current-buffer :keys nil :visible (clearcase-file-ok-to-hijack buffer-file-name)] ["Unhijack" clearcase-unhijack-current-buffer :keys nil :visible (clearcase-file-ok-to-unhijack buffer-file-name)] ["Uncheckout" clearcase-uncheckout-current-buffer :visible (clearcase-file-ok-to-uncheckout buffer-file-name)] ["Find checkouts" clearcase-find-checkouts-in-current-view t] ["Make element" clearcase-mkelem-current-buffer :visible (clearcase-file-ok-to-mkelem buffer-file-name)] "---------------------------------" ["Describe version" clearcase-describe-current-buffer :visible (clearcase-buffer-contains-version-p)] ["Describe file" clearcase-describe-current-buffer :visible (not (clearcase-buffer-contains-version-p))] ["Annotate version" clearcase-annotate-current-buffer :visible (clearcase-buffer-contains-version-p)] ["Show config-spec rule" clearcase-what-rule-current-buffer :visible (clearcase-buffer-contains-version-p)] ["Edit config-spec" clearcase-edcs-edit t] "---------------------------------" (list "Compare (Emacs)..." ["Compare with predecessor" clearcase-ediff-pred-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)] ["Compare with branch base" clearcase-ediff-branch-base-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)] ["Compare with named version" clearcase-ediff-named-version-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)]) (list "Compare (GUI)..." ["Compare with predecessor" clearcase-gui-diff-pred-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)] ["Compare with branch base" clearcase-gui-diff-branch-base-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)] ["Compare with named version" clearcase-gui-diff-named-version-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)]) (list "Compare (diff)..." ["Compare with predecessor" clearcase-diff-pred-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)] ["Compare with branch base" clearcase-diff-branch-base-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)] ["Compare with named version" clearcase-diff-named-version-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)]) "---------------------------------" ["Browse versions (dired)" clearcase-browse-vtree-current-buffer :visible (clearcase-file-ok-to-browse buffer-file-name)] ["Vtree browser GUI" clearcase-gui-vtree-browser-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)] "---------------------------------" (list "Update snapshot..." ["Update view" clearcase-update-view :keys nil :visible (and (clearcase-file-is-in-view-p default-directory) (not (clearcase-file-is-in-mvfs-p default-directory)))] ["Update directory" clearcase-update-default-directory :keys nil :visible (and (clearcase-file-is-in-view-p default-directory) (not (clearcase-file-is-in-mvfs-p default-directory)))] ["Update this file" clearcase-update-current-buffer :keys nil :visible (and (clearcase-file-ok-to-checkout buffer-file-name) (not (clearcase-file-is-in-mvfs-p buffer-file-name)))]) "---------------------------------" (list "Element history..." ["Element history (full)" clearcase-list-history-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)] ["Element history (branch)" clearcase-list-history-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)] ["Element history (me)" clearcase-list-history-current-buffer :keys nil :visible (clearcase-buffer-contains-version-p)]) "---------------------------------" ["Show current activity" clearcase-ucm-describe-current-activity :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Make activity" clearcase-ucm-mkact-current-dir :keys nil :visible (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Set activity..." clearcase-ucm-set-activity-current-dir :keys nil :visible (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Set NO activity" clearcase-ucm-set-activity-none-current-dir :keys nil :visible (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Rebase this stream" clearcase-gui-rebase :keys nil :visible (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Deliver from this stream" clearcase-gui-deliver :keys nil :visible (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] "---------------------------------" (list "ClearCase GUI" ["ClearCase Explorer" clearcase-gui-clearexplorer :keys nil :visible clearcase-on-mswindows] ["Project Explorer" clearcase-gui-project-explorer :keys nil] ["Merge Manager" clearcase-gui-merge-manager :keys nil] ["Snapshot View Updater" clearcase-gui-snapshot-view-updater :keys nil]) "---------------------------------" ["Make branch type" clearcase-mkbrtype :keys nil] "---------------------------------" ["Report Bug in ClearCase Mode" clearcase-submit-bug-report :keys nil] ["Dump internals" clearcase-dump :keys nil :visible (or (equal "rwhitby" (user-login-name)) (equal "esler" (user-login-name)))] ["Flush caches" clearcase-flush-caches :keys nil :visible (or (equal "rwhitby" (user-login-name)) (equal "esler" (user-login-name)))] "---------------------------------" ["Customize..." (customize-group (quote clearcase)) :keys nil])) nil [221517 229066]) ("clearcase-menu-contents" variable (:default-value (list "ClearCase" ["Checkin" clearcase-checkin-current-buffer :keys nil :active (clearcase-file-ok-to-checkin buffer-file-name)] ["Edit checkout comment" clearcase-edit-checkout-comment-current-buffer :keys nil :active (clearcase-file-ok-to-checkin buffer-file-name)] ["Checkout" clearcase-checkout-current-buffer :keys nil :active (clearcase-file-ok-to-checkout buffer-file-name)] ["Hijack" clearcase-hijack-current-buffer :keys nil :active (clearcase-file-ok-to-hijack buffer-file-name)] ["Unhijack" clearcase-unhijack-current-buffer :keys nil :active (clearcase-file-ok-to-unhijack buffer-file-name)] ["Uncheckout" clearcase-uncheckout-current-buffer :active (clearcase-file-ok-to-uncheckout buffer-file-name)] ["Make element" clearcase-mkelem-current-buffer :active (clearcase-file-ok-to-mkelem buffer-file-name)] "---------------------------------" ["Describe version" clearcase-describe-current-buffer :active (clearcase-buffer-contains-version-p)] ["Describe file" clearcase-describe-current-buffer :active (not (clearcase-buffer-contains-version-p))] ["Annotate version" clearcase-annotate-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)] ["Show config-spec rule" clearcase-what-rule-current-buffer :active (clearcase-buffer-contains-version-p)] ["Edit config-spec" clearcase-edcs-edit t] "---------------------------------" (list "Compare (Emacs)..." ["Compare with predecessor" clearcase-ediff-pred-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)] ["Compare with branch base" clearcase-ediff-branch-base-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)] ["Compare with named version" clearcase-ediff-named-version-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)]) (list "Compare (GUI)..." ["Compare with predecessor" clearcase-gui-diff-pred-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)] ["Compare with branch base" clearcase-gui-diff-branch-base-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)] ["Compare with named version" clearcase-gui-diff-named-version-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)]) (list "Compare (diff)..." ["Compare with predecessor" clearcase-diff-pred-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)] ["Compare with branch base" clearcase-diff-branch-base-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)] ["Compare with named version" clearcase-diff-named-version-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)]) "---------------------------------" ["Browse versions (dired)" clearcase-browse-vtree-current-buffer :active (clearcase-file-ok-to-browse buffer-file-name)] ["Vtree browser GUI" clearcase-gui-vtree-browser-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)] "---------------------------------" (list "Update snapshot..." ["Update view" clearcase-update-view :keys nil :active (and (clearcase-file-is-in-view-p default-directory) (not (clearcase-file-is-in-mvfs-p default-directory)))] ["Update directory" clearcase-update-default-directory :keys nil :active (and (clearcase-file-is-in-view-p default-directory) (not (clearcase-file-is-in-mvfs-p default-directory)))] ["Update this file" clearcase-update-current-buffer :keys nil :active (and (clearcase-file-ok-to-checkout buffer-file-name) (not (clearcase-file-is-in-mvfs-p buffer-file-name)))]) "---------------------------------" (list "Element history..." ["Element history (full)" clearcase-list-history-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)] ["Element history (branch)" clearcase-list-history-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)] ["Element history (me)" clearcase-list-history-current-buffer :keys nil :active (clearcase-buffer-contains-version-p)]) "---------------------------------" ["Show current activity" clearcase-ucm-describe-current-activity :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Make activity" clearcase-ucm-mkact-current-dir :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Set activity..." clearcase-ucm-set-activity-current-dir :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Set NO activity" clearcase-ucm-set-activity-none-current-dir :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Rebase this stream" clearcase-gui-rebase :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Deliver from this stream" clearcase-gui-deliver :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] "---------------------------------" (list "ClearCase GUI" ["ClearCase Explorer" clearcase-gui-clearexplorer :keys nil :active clearcase-on-mswindows] ["Project Explorer" clearcase-gui-project-explorer :keys nil] ["Merge Manager" clearcase-gui-merge-manager :keys nil] ["Snapshot View Updater" clearcase-gui-snapshot-view-updater :keys nil]) "---------------------------------" ["Make branch type" clearcase-mkbrtype :keys nil] "---------------------------------" ["Report Bug in ClearCase Mode" clearcase-submit-bug-report :keys nil] ["Dump internals" clearcase-dump :keys nil :active (or (equal "rwhitby" (user-login-name)) (equal "esler" (user-login-name)))] ["Flush caches" clearcase-flush-caches :keys nil :active (or (equal "rwhitby" (user-login-name)) (equal "esler" (user-login-name)))] "---------------------------------" ["Customize..." (customize-group (quote clearcase)) :keys nil])) nil [229068 236514]) ("if" code nil nil [236516 236654]) ("if" code nil nil [236664 236970]) ("clearcase-dired-mark-count" function nil nil [237204 237535]) ("clearcase-dired-current-ok-to-checkin" function nil nil [237537 237689]) ("clearcase-dired-current-ok-to-checkout" function nil nil [237691 237845]) ("clearcase-dired-current-ok-to-uncheckout" function nil nil [237847 238005]) ("clearcase-dired-current-ok-to-hijack" function nil nil [238007 238157]) ("clearcase-dired-current-ok-to-unhijack" function nil nil [238159 238313]) ("clearcase-dired-current-ok-to-mkelem" function nil nil [238315 238465]) ("clearcase-dired-current-ok-to-browse" function nil nil [238467 238597]) ("clearcase-dired-max-marked-files-to-check" variable (:default-value 5) nil [238599 238746]) ("clearcase-dired-marked-ok-to-checkin" function nil nil [238937 239202]) ("clearcase-dired-marked-ok-to-checkout" function nil nil [239204 239471]) ("clearcase-dired-marked-ok-to-uncheckout" function nil nil [239473 239744]) ("clearcase-dired-marked-ok-to-hijack" function nil nil [239746 240009]) ("clearcase-dired-marked-ok-to-unhijack" function nil nil [240011 240278]) ("clearcase-dired-marked-ok-to-mkelem" function nil nil [240280 240543]) ("clearcase-dired-current-dir-ok-to-checkin" function nil nil [240545 240678]) ("clearcase-dired-current-dir-ok-to-checkout" function nil nil [240680 240815]) ("clearcase-dired-current-dir-ok-to-uncheckout" function nil nil [240817 240956]) ("clearcase-dired-menu-contents-minimised" variable (:default-value (list "ClearCase" ["Checkin file" clearcase-checkin-dired-files :keys nil :visible (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-checkin))] ["Edit checkout comment" clearcase-edit-checkout-comment-dired-file :keys nil :visible (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-checkin))] ["Checkout file" clearcase-checkout-dired-files :keys nil :visible (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-checkout))] ["Uncheckout file" clearcase-uncheckout-dired-files :keys nil :visible (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-uncheckout))] ["Hijack file" clearcase-hijack-dired-files :keys nil :visible (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-hijack))] ["Unhijack file" clearcase-unhijack-dired-files :keys nil :visible (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-unhijack))] ["Find checkouts" clearcase-find-checkouts-in-current-view t] ["Make file an element" clearcase-mkelem-dired-files :visible (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-mkelem))] ["Checkin marked files" clearcase-checkin-dired-files :keys nil :visible (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-checkin))] ["Checkout marked files" clearcase-checkout-dired-files :keys nil :visible (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-checkout))] ["Uncheckout marked files" clearcase-uncheckout-dired-files :keys nil :visible (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-uncheckout))] ["Hijack marked files" clearcase-hijack-dired-files :keys nil :visible (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-hijack))] ["Unhijack marked files" clearcase-unhijack-dired-files :keys nil :visible (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-unhijack))] ["Make marked files elements" clearcase-mkelem-dired-files :keys nil :visible (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-mkelem))] ["Checkin current-dir" clearcase-dired-checkin-current-dir :keys nil :visible (clearcase-dired-current-dir-ok-to-checkin)] ["Checkout current dir" clearcase-dired-checkout-current-dir :keys nil :visible (clearcase-dired-current-dir-ok-to-checkout)] ["Uncheckout current dir" clearcase-dired-uncheckout-current-dir :keys nil :visible (clearcase-dired-current-dir-ok-to-uncheckout)] "---------------------------------" ["Describe file" clearcase-describe-dired-file :visible t] ["Annotate file" clearcase-annotate-dired-file :visible t] ["Show config-spec rule" clearcase-what-rule-dired-file :visible t] ["Edit config-spec" clearcase-edcs-edit t] "---------------------------------" (list "Compare (Emacs)..." ["Compare with predecessor" clearcase-ediff-pred-dired-file :keys nil :visible t] ["Compare with branch base" clearcase-ediff-branch-base-dired-file :keys nil :visible t] ["Compare with named version" clearcase-ediff-named-version-dired-file :keys nil :visible t]) (list "Compare (GUI)..." ["Compare with predecessor" clearcase-gui-diff-pred-dired-file :keys nil :visible t] ["Compare with branch base" clearcase-gui-diff-branch-base-dired-file :keys nil :visible t] ["Compare with named version" clearcase-gui-diff-named-version-dired-file :keys nil :visible t]) (list "Compare (diff)..." ["Compare with predecessor" clearcase-diff-pred-dired-file :keys nil :visible t] ["Compare with branch base" clearcase-diff-branch-base-dired-file :keys nil :visible t] ["Compare with named version" clearcase-diff-named-version-dired-file :keys nil :visible t]) "---------------------------------" ["Browse versions (dired)" clearcase-browse-vtree-dired-file :visible (clearcase-dired-current-ok-to-browse)] ["Vtree browser GUI" clearcase-gui-vtree-browser-dired-file :keys nil :visible t] "---------------------------------" (list "Update snapshot..." ["Update view" clearcase-update-view :keys nil :visible (and (clearcase-file-is-in-view-p default-directory) (not (clearcase-file-is-in-mvfs-p default-directory)))] ["Update directory" clearcase-update-default-directory :keys nil :visible (and (clearcase-file-is-in-view-p default-directory) (not (clearcase-file-is-in-mvfs-p default-directory)))] ["Update file" clearcase-update-dired-files :keys nil :visible (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-checkout) (not (clearcase-file-is-in-mvfs-p default-directory)))] ["Update marked files" clearcase-update-dired-files :keys nil :visible (and (>= (clearcase-dired-mark-count) 2) (not (clearcase-file-is-in-mvfs-p default-directory)))]) "---------------------------------" (list "Element history..." ["Element history (full)" clearcase-list-history-dired-file :keys nil :visible t] ["Element history (branch)" clearcase-list-history-dired-file :keys nil :visible t] ["Element history (me)" clearcase-list-history-dired-file :keys nil :visible t]) "---------------------------------" ["Show current activity" clearcase-ucm-describe-current-activity :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Make activity" clearcase-ucm-mkact-current-dir :keys nil :visible (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Set activity..." clearcase-ucm-set-activity-current-dir :keys nil :visible (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Set NO activity" clearcase-ucm-set-activity-none-current-dir :keys nil :visible (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Rebase this stream" clearcase-gui-rebase :keys nil :visible (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Deliver from this stream" clearcase-gui-deliver :keys nil :visible (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] "---------------------------------" (list "ClearCase GUI" ["ClearCase Explorer" clearcase-gui-clearexplorer :keys nil :visible clearcase-on-mswindows] ["Project Explorer" clearcase-gui-project-explorer :keys nil] ["Merge Manager" clearcase-gui-merge-manager :keys nil] ["Snapshot View Updater" clearcase-gui-snapshot-view-updater :keys nil]) "---------------------------------" ["Make branch type" clearcase-mkbrtype :keys nil] "---------------------------------" ["Report Bug in ClearCase Mode" clearcase-submit-bug-report :keys nil] ["Dump internals" clearcase-dump :keys nil :visible (or (equal "rwhitby" (user-login-name)) (equal "esler" (user-login-name)))] ["Flush caches" clearcase-flush-caches :keys nil :visible (or (equal "rwhitby" (user-login-name)) (equal "esler" (user-login-name)))] "---------------------------------" ["Customize..." (customize-group (quote clearcase)) :keys nil])) nil [241065 250229]) ("clearcase-dired-menu-contents" variable (:default-value (list "ClearCase" ["Checkin file" clearcase-checkin-dired-files :keys nil :active (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-checkin))] ["Edit checkout comment" clearcase-edit-checkout-comment-dired-file :keys nil :active (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-checkin))] ["Checkout file" clearcase-checkout-dired-files :keys nil :active (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-checkout))] ["Uncheckout file" clearcase-uncheckout-dired-files :keys nil :active (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-uncheckout))] ["Hijack file" clearcase-hijack-dired-files :keys nil :active (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-hijack))] ["Unhijack file" clearcase-unhijack-dired-files :keys nil :active (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-unhijack))] ["Make file an element" clearcase-mkelem-dired-files :active (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-mkelem))] ["Checkin marked files" clearcase-checkin-dired-files :keys nil :active (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-checkin))] ["Checkout marked files" clearcase-checkout-dired-files :keys nil :active (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-checkout))] ["Uncheckout marked files" clearcase-uncheckout-dired-files :keys nil :active (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-uncheckout))] ["Hijack marked files" clearcase-hijack-dired-files :keys nil :active (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-hijack))] ["Unhijack marked files" clearcase-unhijack-dired-files :keys nil :active (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-unhijack))] ["Make marked files elements" clearcase-mkelem-dired-files :keys nil :active (and (>= (clearcase-dired-mark-count) 2) (clearcase-dired-marked-ok-to-mkelem))] ["Checkin current-dir" clearcase-dired-checkin-current-dir :keys nil :active (clearcase-dired-current-dir-ok-to-checkin)] ["Checkout current dir" clearcase-dired-checkout-current-dir :keys nil :active (clearcase-dired-current-dir-ok-to-checkout)] ["Uncheckout current dir" clearcase-dired-uncheckout-current-dir :keys nil :active (clearcase-dired-current-dir-ok-to-uncheckout)] "---------------------------------" ["Describe file" clearcase-describe-dired-file :active t] ["Annotate file" clearcase-annotate-dired-file :active t] ["Show config-spec rule" clearcase-what-rule-dired-file :active t] ["Edit config-spec" clearcase-edcs-edit t] "---------------------------------" (list "Compare (Emacs)..." ["Compare with predecessor" clearcase-ediff-pred-dired-file :keys nil :active t] ["Compare with branch base" clearcase-ediff-branch-base-dired-file :keys nil :active t] ["Compare with named version" clearcase-ediff-named-version-dired-file :keys nil :active t]) (list "Compare (GUI)..." ["Compare with predecessor" clearcase-gui-diff-pred-dired-file :keys nil :active t] ["Compare with branch base" clearcase-gui-diff-branch-base-dired-file :keys nil :active t] ["Compare with named version" clearcase-gui-diff-named-version-dired-file :keys nil :active t]) (list "Compare (diff)..." ["Compare with predecessor" clearcase-diff-pred-dired-file :keys nil :active t] ["Compare with branch base" clearcase-diff-branch-base-dired-file :keys nil :active t] ["Compare with named version" clearcase-diff-named-version-dired-file :keys nil :active t]) "---------------------------------" ["Browse versions (dired)" clearcase-browse-vtree-dired-file :active (clearcase-dired-current-ok-to-browse)] ["Vtree browser GUI" clearcase-gui-vtree-browser-dired-file :keys nil :active t] "---------------------------------" (list "Update snapshot..." ["Update view" clearcase-update-view :keys nil :active (and (clearcase-file-is-in-view-p default-directory) (not (clearcase-file-is-in-mvfs-p default-directory)))] ["Update directory" clearcase-update-default-directory :keys nil :active (and (clearcase-file-is-in-view-p default-directory) (not (clearcase-file-is-in-mvfs-p default-directory)))] ["Update file" clearcase-update-dired-files :keys nil :active (and (< (clearcase-dired-mark-count) 2) (clearcase-dired-current-ok-to-checkout) (not (clearcase-file-is-in-mvfs-p default-directory)))] ["Update marked files" clearcase-update-dired-files :keys nil :active (and (>= (clearcase-dired-mark-count) 2) (not (clearcase-file-is-in-mvfs-p default-directory)))]) "---------------------------------" (list "Element history..." ["Element history (full)" clearcase-list-history-dired-file :keys nil :active t] ["Element history (branch)" clearcase-list-history-dired-file :keys nil :active t] ["Element history (me)" clearcase-list-history-dired-file :keys nil :active t]) "---------------------------------" ["Show current activity" clearcase-ucm-describe-current-activity :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Make activity" clearcase-ucm-mkact-current-dir :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Set activity..." clearcase-ucm-set-activity-current-dir :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Set NO activity" clearcase-ucm-set-activity-none-current-dir :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Rebase this stream" clearcase-gui-rebase :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] ["Deliver from this stream" clearcase-gui-deliver :keys nil :active (clearcase-vprop-ucm (clearcase-fprop-viewtag default-directory))] "---------------------------------" (list "ClearCase GUI" ["ClearCase Explorer" clearcase-gui-clearexplorer :keys nil :active clearcase-on-mswindows] ["Project Explorer" clearcase-gui-project-explorer :keys nil] ["Merge Manager" clearcase-gui-merge-manager :keys nil] ["Snapshot View Updater" clearcase-gui-snapshot-view-updater :keys nil]) "---------------------------------" ["Make branch type" clearcase-mkbrtype :keys nil] "---------------------------------" ["Report Bug in ClearCase Mode" clearcase-submit-bug-report :keys nil] ["Dump internals" clearcase-dump :keys nil :active (or (equal "rwhitby" (user-login-name)) (equal "esler" (user-login-name)))] ["Flush caches" clearcase-flush-caches :keys nil :active (or (equal "rwhitby" (user-login-name)) (equal "esler" (user-login-name)))] "---------------------------------" ["Customize..." (customize-group (quote clearcase)) :keys nil])) nil [250231 259257]) ("if" code nil nil [259259 259409]) ("if" code nil nil [259418 259714]) ("clearcase-selection-window-config" variable nil nil [259869 259915]) ("clearcase-selection-interpreter" variable nil nil [259916 259960]) ("clearcase-selection-continuation" variable nil nil [259961 260006]) ("clearcase-selection-operands" variable nil nil [260007 260048]) ("clearcase-ucm-make-selection-window" function (:arguments ("buffer-name" "buffer-contents" "selection-interpreter" "continuation" "cont-arglist")) nil [260050 261913]) ("clearcase-selection-continue" function nil nil [261915 262543]) ("clearcase-selection-mouse-continue" function (:arguments ("click")) nil [262545 262675]) ("clearcase-selection-keymap" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [return] (quote clearcase-selection-continue)) (define-key map [mouse-2] (quote clearcase-selection-mouse-continue)) (define-key map "q" (quote clearcase-utl-kill-view-buffer)) map)) nil [262677 263019]) ("clearcase-get-version-string" function nil nil [263160 263742]) ("clearcase-find-cleartool" function nil nil [263785 264540]) ("clearcase-non-lt-registry-server-online-p" function nil nil [264542 265878]) ("clearcase-lt-registry-server-online-p" function nil nil [265958 267315]) ("clearcase-registry-server-online-p" function nil nil [267421 267675]) ("clearcase-hook-find-file-hook" function nil nil [267757 269163]) ("clearcase-set-auto-mode" function nil nil [269165 269566]) ("clearcase-hook-vxpath-find-file-hook" function nil nil [269630 271026]) ("clearcase-hook-dired-mode-hook" function nil nil [271092 272224]) ("clearcase-hook-dired-after-readin-hook" function nil nil [272310 272595]) ("clearcase-version-stamp-line-limit" variable (:default-value 1000) nil [272888 272936]) ("clearcase-version-stamp-begin-regexp" variable (:default-value "ClearCase-version:[ 	]<") nil [272937 273009]) ("clearcase-version-stamp-end-regexp" variable (:default-value ">") nil [273010 273057]) ("clearcase-version-stamp-active" variable nil nil [273058 273101]) ("clearcase-increment-version" function (:arguments ("version-string")) nil [273103 273367]) ("clearcase-version-stamp" function nil nil [273369 275143]) ("clearcase-hook-write-file-hook" function nil nil [275145 275293]) ("clearcase-hook-kill-buffer-hook" function nil nil [275328 275719]) ("clearcase-hook-kill-emacs-hook" function nil nil [275753 275828]) ("clearcase-toggle-read-only" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [275889 276639]) ("clearcase-viewroot-relative-file-name-handler" function (:arguments ("operation" "&rest" "args")) nil [276885 278251]) ("clearcase-viewtag-file-name-handler" function (:arguments ("operation" "&rest" "args")) nil [278343 279193]) ("clearcase-viewtag-completion" function (:arguments ("file" "dir")) nil [279195 279311]) ("clearcase-viewtag-completions" function (:arguments ("file" "dir")) nil [279313 279561]) ("clearcase-vxpath-file-name-handler" function (:arguments ("operation" "&rest" "args")) nil [281697 282578]) ("vc-registered" function (:arguments ("around" "clearcase-interceptor" "disable" "compile")) nil [282859 283143]) ("clearcase-integrate" function (:user-visible-flag t) nil [283198 284941]) ("clearcase-unintegrate" function (:user-visible-flag t) nil [284943 286231]) ("clearcase-cleartool-path" variable nil nil [286285 286322]) ("clearcase-clearcase-version-installed" variable nil nil [286323 286373]) ("clearcase-lt" variable nil nil [286374 286399]) ("clearcase-v3" variable nil nil [286400 286425]) ("clearcase-v4" variable nil nil [286426 286451]) ("clearcase-v6" variable nil nil [286452 286477]) ("clearcase-servers-online" variable nil nil [286478 286515]) ("clearcase-setview-root" variable nil nil [286516 286551]) ("clearcase-setview-viewtag" variable nil nil [286552 286586]) ("clearcase-setview-root" variable nil nil [286587 286622]) ("clearcase-setview-viewtag" variable nil nil [286623 286661]) ("progn" code nil nil [286663 289321]) ("if" code nil nil [289323 289450]) ("clearcase" package nil nil [289459 289479]) ("at" code nil nil [289593 289593]) ("functions" code nil nil [289593 289593]) ("load" code nil nil [289593 289593]) ("y-or-n-p" code nil nil [289593 289593]) ("reporter-submit-bug-report" code nil nil [289593 289593]) (",filename-var" code nil nil [289593 289593]) ("delete-file" code nil nil [289593 289593]) ("selected-frame" code nil nil [289593 289593]) ("frame-property" code nil nil [289593 289593]) ("selected-frame" code nil nil [289593 289593]) ("one-window-p" code nil nil [289593 289593]) ("current-window-configuration" code nil nil [289593 289593]) ("one-window-p" code nil nil [289593 289593]) ("buffer-name" code nil nil [289593 289593]) ("not" code nil nil [289593 289593]))
    :file "clearcase.el"
    :pointmax 289593
    :unmatched-syntax 'nil
    )
   (semanticdb-table "subdirs.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("if" code nil nil [1 106]))
    :file "subdirs.el"
    :pointmax 107
    )
   (semanticdb-table "w32-cursor.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("timer" include nil nil [1629 1645]) ("w32-cursor-color" variable (:user-visible-flag t :default-value (frame-parameter (selected-frame) (quote cursor-color))) nil [1647 1750]) ("w32-cursor-bar-width" variable (:user-visible-flag t :default-value 2) nil [1930 2016]) ("w32-cursor-color-index" variable nil nil [2018 2145]) ("w32-cursor-mode" variable nil nil [2298 2411]) ("w32-cursor-orig-cursor-type" variable (:default-value (frame-parameter (selected-frame) (quote cursor-type))) nil [2413 2610]) ("w32-cursor-mode" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [3664 4397]) ("w32-cursor-get-cursor-type" function nil nil [4399 4599]) ("w32-blink-cursor" function nil nil [4601 4787]) ("overwrite-mode" function (:arguments ("after" "w32-cursor-toggle-cursor-shape" "activate")) nil [4791 5086]) ("w32-cursor" package nil nil [5088 5109]))
    :file "w32-cursor.el"
    :pointmax 5110
    )
   (semanticdb-table "eol-conversion.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("easymenu" include nil nil [1583 1602]) ("set-buffer-eol-conversion" function (:arguments ("type")) nil [1604 2405]) ("set-buffer-eol-conversion-unix" function (:user-visible-flag t) nil [2407 2544]) ("set-buffer-eol-conversion-dos" function (:user-visible-flag t) nil [2546 2683]) ("set-buffer-eol-conversion-mac" function (:user-visible-flag t) nil [2685 2825]) ("define-key" code nil nil [2827 2954]) ("define-key" code nil nil [2955 3080]) ("define-key" code nil nil [3081 3206]) ("easy-menu-add-item" code nil nil [3208 3285]) ("easy-menu-add-item" code nil nil [3287 4044]) ("eol-conversion" package nil nil [4046 4071]))
    :file "eol-conversion.el"
    :pointmax 4105
    )
   (semanticdb-table "hhm-config.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("defgroup" code nil nil [247 363]) ("defgroup" code nil nil [365 481]) ("html-helper-mode-uses-visual-basic" variable nil nil [541 741]) ("html-helper-mode-uses-JDE" variable nil nil [743 936]) ("html-helper-mode-uses-bold-italic" variable nil nil [938 1163]) ("html-helper-mode-uses-KG-style" variable nil nil [1165 1406]) ("html-helper-mode-global-JSP-not-ASP" variable (:default-value t) nil [1408 1648]) ("progn" code nil nil [1650 3455]))
    :file "hhm-config.el"
    :pointmax 3455
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0beta3"
  :semanticdb-version "2.0beta3"
  )
